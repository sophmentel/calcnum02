import numpy as np
import sys

eps = 1e-3
n = int(input("Ordem do sistema:"))

#entrada de dados

a = np.zeros((n, n+1))
x = np.zeros(n)

for i in range(n):
  for j in range(n):
    a[i][j] = float(input("a("+str(i+1)+","+str(j+1)+")= "))
  a[i][n] = float(input("b("+str(i+1)+")= "))

print("matriz original")
print(a)

#ordenação das linhas

for j in range(n):   #coluna
  m = j
  for i in range(j,n):    #linha
    if abs(a[i][j]) > abs(a[m][j]):
      m = 1
  a[[m,j]] = a[[j,m]]

print("linhas ordenadas")
print(a)

#determinante

D = np.linalg.det( a[:,:n] )
if D<eps:
  sys.exit("este sistema não tem soluções")

#eliminação

for k in range(n):
  for i in range(k+1,n):
    m = a[i][k]/a[k][k]
    a[i][k] = 0
    for j in range(k+1,n):
      a[i][j] -= m*a[k][j]
    a[i][n] -= m*a[k][n]

print("matriz triangular superior")
print(a)

#resolução

x[n-1] = a[n-1][n]/a[n-1][n-1]
for k in reversed(range(n-1)):
  s = 0.0
  for j in range(k,n):
    #print("k,j=",k,",",j)
    s += a[k][j]*x[j]
    x[k] = (a[k][n]-s)/a[k][k]

print("\nx=",x)
